/**----------------------------------------------------------------------------
 * PROJECT: froute
 * PURPOSE:
 * Pad object
 *-----------------------------------------------------------------------------  
 * CREATION: Jul 21, 2016
 * Author: Luca Mini
 * 
 * LICENCE: please see LICENCE.TXT file
 * 
 * HISTORY (of the module):
 *-----------------------------------------------------------------------------
 * Author              | Date        | Description
 *-----------------------------------------------------------------------------
 *-----------------------------------------------------------------------------
 */

#ifndef PAD_H_
#define PAD_H_

#include "global.h"

struct padGeoData_st
{
	meas_t posx,posy;
	meas_t szx,szy;
	enum padShape_e
	{
		ps_circle,
		ps_rectangular
	} padShape;
};

//-----------------------------------------------------------------------------
// Pad description data
//-----------------------------------------------------------------------------

class Pad
{
public:
	Pad();
	Pad(meas_t posx,meas_t posy,padGeoData_st::padShape_e padShape,meas_t sizex, meas_t sizey, std::string netname)
	{
	this->netname=netname;
	for(int l=0;l<MAX_N_LAYERS;l++)
		{
		this->padGeoData[l].posx=posx;
		this->padGeoData[l].posy=posy;
		this->padGeoData[l].szx=sizex;
		this->padGeoData[l].szy=sizey;
		this->padGeoData[l].padShape=padShape;
		}
	}

	virtual ~Pad();

	//-----------------------------------------------------------------------------
	// property getters/setters
	//-----------------------------------------------------------------------------

	const std::string& getNetname() const
	{
	return netname;
	}

	void setNetname(const std::string& netname)
	{
	this->netname = netname;
	}

	const padGeoData_st*& getPadGeoData() const
	{
	return padGeoData;
	}

	void setPadGeoData(int layer,meas_t posx,meas_t posy,padGeoData_st::padShape_e padShape,meas_t sizex, meas_t sizey, std::string netname)
	{
	this->netname=netname;
	this->padGeoData[layer].posx=posx;
	this->padGeoData[layer].posy=posy;
	this->padGeoData[layer].szx=sizex;
	this->padGeoData[layer].szy=sizey;
	this->padGeoData[layer].padShape=padShape;
	}

private:
	padGeoData_st padGeoData[MAX_N_LAYERS];
	std::string netname;
};

//-----------------------------------------------
#endif /* PAD_H_ */
